spring:
  profiles:
    include:
      - props
      - server
      - spring-boot
      - spring-cloud
      - actuator
      - logging
---
spring:
  profiles:
    active: server
server:
  port: ${props.gateway.port}
---
spring:
  profiles:
    active: spring-boot
  application:
    name: gateway-service
  output:
    ansi:
      enabled: always
---
spring:
  profiles:
    active: spring-cloud
    output:
      ansi:
        enabled: always
#  security:
#    oauth2:
#      client:
#        provider:
#          keycloak:
#            issuer-uri: http://localhost:8090/auth/realms/spring-cloud-gateway-realm
#            user-name-attribute: preferred_username
#        registration:
#          keycloak:
#            client-id: spring-cloud-gateway-client
#            client-secret: 016c6e1c-9cbe-4ad3-aee1-01ddbb370f32

  cloud:
    gateway:
#      default-filters:
#        - TokenRelay
#      globalcors:
#        corsConfigurations:
#          '[/**]':
#            allowedOrigins:
#              - "http://localhost:5000"
#              - "http://${LOGIN_HOST}:8080"
#            allowedOrigins: "*"
#            allowedMethods:
#              - "*"
#            allowed-headers:
#              - "*"
#            allow-credentials: true
#uri: http://${LOGIN_HOST}:8080/
#uri: http://localhost:8080/
      routes:
        - id: login-ms-1
          uri: http://${LOGIN_HOST}/
          predicates:
            - Path=/login/**
        - id: employeeModule-ms-2
          uri: http://${MS1_HOST}/
          predicates:
            - Path=/employees/**
        - id: consumerModule-ms-3
          uri: http://${MS2_HOST}/
          predicates:
            - Path=/consumers/**
        - id: summary-ms-4
          uri: http://${SUMMARY_HOST}/
          predicates:
            - Path=/summary/**
        - id: flights-service
          uri: http://127.0.0.1:8083/flights
          predicates:
            - Path=/flights/**
        - id: hotels-service
          uri: http://127.0.0.1:8084/hotels
          predicates:
            - Path=/hotels/**
        - id: web
          uri: http://${WEB_HOST}
          predicates:
            - Path=/ibcs-manager/**
          filters:
            - RewritePath=/ibcs-manager/(?<segment>.*), /$\{segment}
      discovery:
        locator:
          enabled: false
    service-registry:
      auto-registration:
        enabled: false
---
spring:
  profiles:
    active: actuator
management:
  endpoints:
    jmx:
      exposure:
        exclude: '*'
    web:
      exposure:
        include:
          - health
  endpoint:
    health:
      show-details: WHEN_AUTHORIZED
    shutdown:
      enabled: false
---
spring:
  profiles:
    active: logging
logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
    org.springframework.cloud.gateway: TRACE
    org.springframework.http.server.reactive: DEBUG
    reactor.netty.http.client: DEBUG
    reactor.ipc.netty: DEBUG
    reactor.netty: DEBUG
    org.springframework.jdbc: DEBUG
#    org.springframework.boot.autoconfigure: DEBUG